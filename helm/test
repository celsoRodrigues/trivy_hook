{"kind":"ConfigAuditReport","apiVersion":"aquasecurity.github.io/v1alpha1","metadata":{"name":"pod-helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76","namespace":"local-path-storage","uid":"6283e0b9-5c3e-4092-b688-6140c09a5e5c","resourceVersion":"2775","generation":1,"creationTimestamp":"2024-03-31T01:56:12Z","labels":{"plugin-config-hash":"659b7b9c46","resource-spec-hash":"758fdc97f4","trivy-operator.resource.kind":"Pod","trivy-operator.resource.name":"helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76","trivy-operator.resource.namespace":"local-path-storage"},"annotations":{"trivy-operator.aquasecurity.github.io/report-ttl":"24h0m0s"},"ownerReferences":[{"apiVersion":"v1","kind":"Pod","name":"helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76","uid":"8abd51b1-5269-4d0f-96bf-f31edcbbe890","controller":true,"blockOwnerDeletion":false}],"managedFields":[{"manager":"trivy-operator","operation":"Update","apiVersion":"aquasecurity.github.io/v1alpha1","time":"2024-03-31T01:56:12Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:trivy-operator.aquasecurity.github.io/report-ttl":{}},"f:labels":{".":{},"f:plugin-config-hash":{},"f:resource-spec-hash":{},"f:trivy-operator.resource.kind":{},"f:trivy-operator.resource.name":{},"f:trivy-operator.resource.namespace":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8abd51b1-5269-4d0f-96bf-f31edcbbe890\"}":{}}},"f:report":{".":{},"f:checks":{},"f:scanner":{".":{},"f:name":{},"f:vendor":{},"f:version":{}},"f:summary":{".":{},"f:criticalCount":{},"f:highCount":{},"f:lowCount":{},"f:mediumCount":{}},"f:updateTimestamp":{}}}}]},"report":{"updateTimestamp":"2024-03-31T01:56:12Z","scanner":{"name":"Trivy","vendor":"Aqua Security","version":"0.18.5"},"summary":{"criticalCount":0,"highCount":2,"mediumCount":5,"lowCount":11},"checks":[{"checkID":"KSV001","title":"Can elevate its own privileges","description":"A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.","severity":"MEDIUM","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'securityContext.allowPrivilegeEscalation' to false"],"remediation":"Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.","success":false},{"checkID":"KSV003","title":"Default capabilities: some containers do not drop all","description":"The container should drop all default capabilities and add only those that are needed for its execution.","severity":"LOW","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should add 'ALL' to 'securityContext.capabilities.drop'"],"remediation":"Add 'ALL' to containers[].securityContext.capabilities.drop.","success":false},{"checkID":"KSV011","title":"CPU not limited","description":"Enforcing CPU limits prevents DoS via resource exhaustion.","severity":"LOW","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'resources.limits.cpu'"],"remediation":"Set a limit value under 'containers[].resources.limits.cpu'.","success":false},{"checkID":"KSV012","title":"Runs as root user","description":"Force the running image to run as a non-root user to ensure least privileges.","severity":"MEDIUM","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'securityContext.runAsNonRoot' to true"],"remediation":"Set 'containers[].securityContext.runAsNonRoot' to true.","success":false},{"checkID":"KSV014","title":"Root file system is not read-only","description":"An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.","severity":"LOW","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'securityContext.readOnlyRootFilesystem' to true"],"remediation":"Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.","success":false},{"checkID":"KSV015","title":"CPU requests not specified","description":"When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.","severity":"LOW","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'resources.requests.cpu'"],"remediation":"Set 'containers[].resources.requests.cpu'.","success":false},{"checkID":"KSV016","title":"Memory requests not specified","description":"When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.","severity":"LOW","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'resources.requests.memory'"],"remediation":"Set 'containers[].resources.requests.memory'.","success":false},{"checkID":"KSV017","title":"Privileged","description":"Privileged containers share namespaces with the host system and do not offer any security. They should be used exclusively for system containers that require high privileges.","severity":"HIGH","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'securityContext.privileged' to false"],"remediation":"Change 'containers[].securityContext.privileged' to 'false'.","success":false},{"checkID":"KSV018","title":"Memory not limited","description":"Enforcing memory limits prevents DoS via resource exhaustion.","severity":"LOW","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'resources.limits.memory'"],"remediation":"Set a limit value under 'containers[].resources.limits.memory'.","success":false},{"checkID":"KSV020","title":"Runs with UID \u003c= 10000","description":"Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.","severity":"LOW","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'securityContext.runAsUser' \u003e 10000"],"remediation":"Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.","success":false},{"checkID":"KSV021","title":"Runs with GID \u003c= 10000","description":"Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.","severity":"LOW","category":"Kubernetes Security Check","messages":["Container 'helper-pod' of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'securityContext.runAsGroup' \u003e 10000"],"remediation":"Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.","success":false},{"checkID":"KSV023","title":"hostPath volumes mounted","description":"According to pod security standard 'HostPath Volumes', HostPath volumes must be forbidden.","severity":"MEDIUM","category":"Kubernetes Security Check","messages":["Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should not set 'spec.template.volumes.hostPath'"],"remediation":"Do not set 'spec.volumes[*].hostPath'.","success":false},{"checkID":"KSV030","title":"Runtime/Default Seccomp profile not set","description":"According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.","severity":"LOW","category":"Kubernetes Security Check","messages":["Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'"],"remediation":"Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.","success":false},{"checkID":"KSV036","title":"Protecting Pod service account tokens","description":"ensure that Pod specifications disable the secret token being mounted by setting automountServiceAccountToken: false","severity":"MEDIUM","category":"Kubernetes Security Check","messages":["Container of Pod 'helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76' should set 'spec.automountServiceAccountToken' to false"],"remediation":"Disable the mounting of service account secret token by setting automountServiceAccountToken to false","success":false},{"checkID":"KSV104","title":"Seccomp policies disabled","description":"A program inside the container can bypass Seccomp protection policies.","severity":"MEDIUM","category":"Kubernetes Security Check","messages":["container helper-pod of pod helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76 in local-path-storage namespace should specify a seccomp profile"],"remediation":"Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards","success":false},{"checkID":"KSV106","title":"Container capabilities must only include NET_BIND_SERVICE","description":"Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.","severity":"LOW","category":"Kubernetes Security Check","messages":["container should drop all"],"remediation":"Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.","success":false},{"checkID":"KSV116","title":"Runs with a root primary or supplementary GID","description":"According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.","severity":"LOW","category":"Kubernetes Security Check","messages":["pod helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76 in local-path-storage namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0"],"remediation":"Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.","success":false},{"checkID":"KSV118","title":"Default security context configured","description":"Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.","severity":"HIGH","category":"Kubernetes Security Check","messages":["pod helper-pod-create-pvc-ca8a4465-3b16-4c64-979c-2b4b694b0a76 in local-path-storage namespace is using the default security context, which allows root privileges"],"remediation":"To enhance security, it is strongly recommended not to rely on the default security context. Instead, it is advisable to explicitly define the required security parameters (such as runAsNonRoot, capabilities, readOnlyRootFilesystem, etc.) within the security context.","success":false}]}}
